{
  "summary": {
    "tested_combinations": 197,
    "total_combinations": 197,
    "failed_compilations": 60,
    "success_rate": 69.54,
    "best_result": {
      "flags": [
        "-O0"
      ],
      "score": 14.98,
      "metrics": {
        "size": 33600,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_919484"
    },
    "baseline_metrics": {
      "size": 33520,
      "string_count": 15,
      "symbol_count": 5,
      "function_count": 1,
      "instruction_count": 2,
      "specific_strings_found": 0,
      "found_strings": ""
    }
  },
  "all_results": [
    {
      "flags": [
        "-O0"
      ],
      "score": 14.98,
      "metrics": {
        "size": 33600,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_919484",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O1"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_368558",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O2"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_422189",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_857072",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-Os"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_524211",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-Oz"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_016350",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-Ofast"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_581767",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Og"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_595136",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -fla"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_159104",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-fla'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -bcf"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_451817",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_577365",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -split"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_836003",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_054273",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_prob"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_369962",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_prob'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -sub_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_619173",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--keep-loops'?"
    },
    {
      "flags": [
        "-mllvm -split_num"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_794758",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split_num'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--print-bpi'?"
    },
    {
      "flags": [
        "-finline-functions"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_319377",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_822987",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-hint-functions"
      ],
      "score": 9.96,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 9,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_062208",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-small-functions"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_978848",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-small-functions' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_833271",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_275925",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=999999"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_334466",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=999999' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-falways-inline"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_537469",
      "success": false,
      "error": "clang: error: unknown argument: '-falways-inline'"
    },
    {
      "flags": [
        "-fno-inline"
      ],
      "score": 9.96,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 9,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_943346",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-inline-functions"
      ],
      "score": 9.96,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 9,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_267835",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions-called-once"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_700056",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-functions-called-once' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_668682",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_654605",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-floop-vectorize"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_986098",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-vectorize'"
    },
    {
      "flags": [
        "-fslp-vectorize"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_589217",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-floop-interchange"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_769568",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-interchange'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_817437",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-limit=8"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_343675",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=8'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_081708",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_404863",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-fno-unroll-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_128474",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-floop-strip-mine"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_855880",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-strip-mine'"
    },
    {
      "flags": [
        "-floop-block"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_421715",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-block'"
    },
    {
      "flags": [
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_865389",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fassociative-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_491445",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_627386",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffinite-math-only"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_523818",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_297742",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-signed-zeros"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_998313",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-trapping-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_331796",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-math-errno"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_766868",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffp-contract=fast"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_120684",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffp-contract=off"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_569623",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -enable-fp-mad"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_970506",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-enable-fp-mad'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--enable-ipra'?"
    },
    {
      "flags": [
        "-flto"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_770649",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_328797",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_743145",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fwhole-program-vtables"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_433928",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffat-lto-objects"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_028615",
      "success": false,
      "error": "clang: error: unsupported option '-ffat-lto-objects' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-flto-jobs=1"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_469178",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto-jobs=4"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_921641",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fuse-ld=lld"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_219893",
      "success": false,
      "error": "clang: error: invalid linker name in argument '-fuse-ld=lld'"
    },
    {
      "flags": [
        "-fomit-frame-pointer"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_800390",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-omit-frame-pointer"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_224674",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-unwind-tables"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_012959",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-asynchronous-unwind-tables"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_599662",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffunction-sections"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_013123",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fdata-sections"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_308750",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-jump-tables"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_212976",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-threadsafe-statics"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_710875",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-rtti"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_090897",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-exceptions"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_284907",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fcf-protection=none"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_786314",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fcf-protection=branch"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_441484",
      "success": false,
      "error": "error: option 'cf-protection=branch' cannot be specified on this target\n1 error generated."
    },
    {
      "flags": [
        "-fcf-protection=return"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_478423",
      "success": false,
      "error": "error: option 'cf-protection=return' cannot be specified on this target\n1 error generated."
    },
    {
      "flags": [
        "-fcf-protection=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_684850",
      "success": false,
      "error": "error: option 'cf-protection=return' cannot be specified on this target\nerror: option 'cf-protection=branch' cannot be specified on this target\n2 errors generated."
    },
    {
      "flags": [
        "-fpack-struct"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_064112",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fpack-struct=1"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_284347",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fpack-struct=2"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_760687",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fshort-enums"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_835559",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fmerge-constants"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_267857",
      "success": true,
      "error": "clang: warning: optimization flag '-fmerge-constants' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-fmerge-all-constants"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_798875",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-merge-constants"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_643112",
      "success": true,
      "error": "clang: warning: optimization flag '-fno-merge-constants' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-fstrict-aliasing"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_849531",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-strict-aliasing"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_221836",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-malign-data=cacheline"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_937160",
      "success": false,
      "error": "clang: error: unknown argument: '-malign-data=cacheline'"
    },
    {
      "flags": [
        "-malign-double"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_256004",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fvisibility=hidden"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_464839",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fvisibility=protected"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_992350",
      "success": false,
      "error": "ld: unknown scope for symbol _validate_input in bitcode file /var/folders/rn/ghq3cdvx40g8286rt7dkw3t80000gn/T/factorial_recursive-88e633.o in '/var/folders/rn/ghq3cdvx40g8286rt7dkw3t80000gn/T/factorial_recursive-88e633.o'\nclang: error: linker command failed with exit code 1 (use -v to see invocation)"
    },
    {
      "flags": [
        "-fvisibility=internal"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_699163",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fvisibility-inlines-hidden"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_839347",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-common"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_484683",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-ident"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_433725",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-plt"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_324046",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-semantic-interposition"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_369609",
      "success": true,
      "error": "clang: warning: argument unused during compilation: '-fno-semantic-interposition' [-Wunused-command-line-argument]"
    },
    {
      "flags": [
        "-fPIE"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_123263",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fPIC"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_756620",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fstack-protector"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_598086",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fstack-protector-all"
      ],
      "score": -10.04,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 7,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_851572",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fstack-protector-strong"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_783080",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fstack-clash-protection"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_598489",
      "success": true,
      "error": "clang: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]"
    },
    {
      "flags": [
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_885132",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-fsanitize=cfi"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_057202",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=cfi' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-fsanitize=cfi-icall"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_873726",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=cfi-icall' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-fsanitize=cfi-vcall"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_519456",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=cfi-vcall' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-fsanitize=shadow-call-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_973799",
      "success": false,
      "error": "LLVM ERROR: ShadowCallStack attribute not supported on Darwin.\nclang: error: unable to execute command: Abort trap: 6\nclang: error: linker command failed due to signal (use -v to see invocation)\nApple clang version 17.0.0 (clang-1700.0.13.3)\nTarget: arm64-apple-darwin24.4.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\nclang: note: diagnostic msg: \n********************\n\nPLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:\nLinker snapshot containing input(s) and associated run script(s) are located at:\nclang: note: diagnostic msg: /var/folders/rn/ghq3cdvx40g8286rt7dkw3t80000gn/T/linker-crash-d11ab5\nclang: note: diagnostic msg: \n\n********************"
    },
    {
      "flags": [
        "-fbounds-safety"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_277454",
      "success": false,
      "error": "clang: error: unknown argument '-fbounds-safety'; did you mean '-Xclang -fbounds-safety'?"
    },
    {
      "flags": [
        "-march=native"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_565321",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mtune=native"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_763923",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mcpu=native"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_423519",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mno-red-zone"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_426227",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mcmodel=small"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_880417",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mcmodel=medium"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_712865",
      "success": false,
      "error": "clang: error: unsupported argument 'medium' to option '-mcmodel=' for target 'arm64-apple-macosx15.0.0'"
    },
    {
      "flags": [
        "-mcmodel=large"
      ],
      "score": -7.5,
      "metrics": {
        "size": 33504,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 1,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_972903",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mretpoline"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_682231",
      "success": true,
      "error": "clang: warning: argument unused during compilation: '-mretpoline' [-Wunused-command-line-argument]"
    },
    {
      "flags": [
        "-mspeculative-load-hardening"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_787443",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mno-speculative-load-hardening"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_966056",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mindirect-branch=thunk"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_013352",
      "success": false,
      "error": "clang: error: unknown argument: '-mindirect-branch=thunk'"
    },
    {
      "flags": [
        "-mfunction-return=thunk"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_948047",
      "success": false,
      "error": "error: invalid value 'thunk' in '-mfunction-return=thunk'\nerror: invalid argument '-mfunction-return=' not allowed with 'arm64-apple-macosx15.0.0'"
    },
    {
      "flags": [
        "-ftree-vectorize"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_304452",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fvectorize"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_150877",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-vectorize"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_345452",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fslp-vectorize-aggressive"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_104619",
      "success": true,
      "error": "clang: warning: the flag '-fslp-vectorize-aggressive' has been deprecated and will be ignored [-Wunused-command-line-argument]"
    },
    {
      "flags": [
        "-fno-slp-vectorize"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_929178",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -force-vector-width=4"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_789261",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -force-vector-width=8"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_562792",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -force-vector-width=16"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_300462",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -force-vector-width=32"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_033979",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-Wl,--gc-sections"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_267966",
      "success": false,
      "error": "ld: unknown options: --gc-sections \nclang: error: linker command failed with exit code 1 (use -v to see invocation)"
    },
    {
      "flags": [
        "-Wl,--strip-debug"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_706454",
      "success": false,
      "error": "ld: unknown options: --strip-debug \nclang: error: linker command failed with exit code 1 (use -v to see invocation)"
    },
    {
      "flags": [
        "-Wl,--strip-all"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_110098",
      "success": false,
      "error": "ld: unknown options: --strip-all \nclang: error: linker command failed with exit code 1 (use -v to see invocation)"
    },
    {
      "flags": [
        "-fno-eliminate-unused-debug-symbols"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_540408",
      "success": true,
      "error": "clang: warning: argument unused during compilation: '-fno-eliminate-unused-debug-symbols' [-Wunused-command-line-argument]"
    },
    {
      "flags": [
        "-fkeep-inline-functions"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_566514",
      "success": true,
      "error": "clang: warning: optimization flag '-fkeep-inline-functions' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-fkeep-static-functions"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_463866",
      "success": false,
      "error": "clang: error: unknown argument: '-fkeep-static-functions'"
    },
    {
      "flags": [
        "-mllvm -disable-lsr"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_940959",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -enable-load-pre"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_118949",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-cgp-branch-opts"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_091586",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-block-placement"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_105156",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-tail-duplicate"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_982582",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-machine-cse"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_173638",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-machine-licm"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_937796",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-machine-sink"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_746277",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-peephole"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_836327",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-post-regalloc-scheduler"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_199372",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-post-regalloc-scheduler'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--disable-gisel-legality-check'?"
    },
    {
      "flags": [
        "-mllvm -disable-if-conversion"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_810656",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-if-conversion'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--enable-if-conversion'?"
    },
    {
      "flags": [
        "-mllvm -disable-branch-fold"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_322662",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-copyprop"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_536933",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-machine-dce"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_618633",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -regalloc=greedy"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_915850",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -regalloc=basic"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_716683",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -regalloc=fast"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_546547",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -regalloc=pbqp"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_272492",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -pre-RA-sched=source"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_753493",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -pre-RA-sched=list-burr"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_860061",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -pre-RA-sched=list-tdrr"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_804720",
      "success": false,
      "error": "clang (LLVM option parsing): for the --pre-RA-sched option: Cannot find option named 'list-tdrr'!"
    },
    {
      "flags": [
        "-mllvm -pre-RA-sched=list-td"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_445417",
      "success": false,
      "error": "clang (LLVM option parsing): for the --pre-RA-sched option: Cannot find option named 'list-td'!"
    },
    {
      "flags": [
        "-mllvm -misched=shuffle"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_323428",
      "success": false,
      "error": "clang (LLVM option parsing): for the --misched option: Cannot find option named 'shuffle'!"
    },
    {
      "flags": [
        "-fno-tree-switch-conversion"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_927388",
      "success": false,
      "error": "clang: error: unknown argument: '-fno-tree-switch-conversion'"
    },
    {
      "flags": [
        "-fno-if-conversion"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_202394",
      "success": false,
      "error": "clang: error: unknown argument: '-fno-if-conversion'"
    },
    {
      "flags": [
        "-fno-if-conversion2"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_083193",
      "success": false,
      "error": "clang: error: unknown argument: '-fno-if-conversion2'"
    },
    {
      "flags": [
        "-fno-tree-loop-if-convert"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_834790",
      "success": false,
      "error": "clang: error: unknown argument: '-fno-tree-loop-if-convert'"
    },
    {
      "flags": [
        "-fno-crossjumping"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_944159",
      "success": false,
      "error": "clang: error: unknown argument: '-fno-crossjumping'"
    },
    {
      "flags": [
        "-fwhole-program"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_558015",
      "success": true,
      "error": "clang: warning: optimization flag '-fwhole-program' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-fno-builtin"
      ],
      "score": 5.01,
      "metrics": {
        "size": 33472,
        "string_count": 15,
        "symbol_count": 4,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_838119",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-builtin-malloc"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_243938",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-builtin-free"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_124400",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-builtin-memcpy"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_284697",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-builtin-memset"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_475680",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fmerge-debug-strings"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_091829",
      "success": false,
      "error": "clang: error: unknown argument: '-fmerge-debug-strings'"
    },
    {
      "flags": [
        "-fno-merge-debug-strings"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_431865",
      "success": false,
      "error": "clang: error: unknown argument: '-fno-merge-debug-strings'"
    },
    {
      "flags": [
        "-fwritable-strings"
      ],
      "score": 0.09,
      "metrics": {
        "size": 49984,
        "string_count": 15,
        "symbol_count": 4,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_739522",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fconst-strings"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_974727",
      "success": false,
      "error": "clang: error: unknown argument '-fconst-strings'; did you mean '-Xclang -fconst-strings'?"
    },
    {
      "flags": [
        "-foptimize-sibling-calls"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_721747",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fno-optimize-sibling-calls"
      ],
      "score": 2.49,
      "metrics": {
        "size": 33552,
        "string_count": 15,
        "symbol_count": 6,
        "function_count": 1,
        "instruction_count": 3,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_798839",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fprofile-generate"
      ],
      "score": -258.0,
      "metrics": {
        "size": 115632,
        "string_count": 73,
        "symbol_count": 156,
        "function_count": 1,
        "instruction_count": 87,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_201973",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fprofile-use"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_173641",
      "success": false,
      "error": "error: Error in reading profile default.profdata: No such file or directory"
    },
    {
      "flags": [
        "-fprofile-instr-generate"
      ],
      "score": -263.47,
      "metrics": {
        "size": 115536,
        "string_count": 72,
        "symbol_count": 153,
        "function_count": 1,
        "instruction_count": 84,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_085139",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fprofile-instr-use"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_823030",
      "success": false,
      "error": "error: Error in reading profile default.profdata: No such file or directory"
    },
    {
      "flags": [
        "-mllvm -enable-tbaa"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_596639",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-tbaa"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_047928",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-tbaa'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--enable-tbaa'?"
    },
    {
      "flags": [
        "-mllvm -enable-aa-sched-mi"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_706601",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-spill-fusing"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_403674",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -disable-fp-elim"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_371083",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-fp-elim'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--disable-preinline'?"
    },
    {
      "flags": [
        "-mllvm -disable-tail-calls"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_920642",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-tail-calls'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--disable-sched-stalls'?"
    },
    {
      "flags": [
        "-mllvm -disable-simplify-libcalls"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_876887",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-simplify-libcalls'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--disable-sched-stalls'?"
    },
    {
      "flags": [
        "-mllvm -disable-delete-null-pointer-checks"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_646896",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-disable-delete-null-pointer-checks'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--disable-gisel-legality-check'?"
    },
    {
      "flags": [
        "-mllvm -stats"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_795404",
      "success": true,
      "error": "Statistics are disabled.  Build with asserts or with -DLLVM_FORCE_ENABLE_STATS"
    },
    {
      "flags": [
        "-mllvm -time-passes"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_672960",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -debug-pass=Structure"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_110872",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -loop-unswitch-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_819226",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-loop-unswitch-threshold=1000'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--unswitch-threshold=1000'?"
    },
    {
      "flags": [
        "-mllvm -unroll-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_346591",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -unroll-count=8"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_269812",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -unroll-allow-partial"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_036670",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -unroll-runtime"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_227693",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_864314",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -inlinehint-threshold=500"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_038254",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -inlinecold-threshold=50"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_073038",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -hot-cold-split"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_497374",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -vectorizer-maximize-bandwidth"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_370980",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -enable-interleaved-mem-accesses"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_512154",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-mllvm -enable-masked-interleaved-mem-accesses"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/single_flag_test/factorial_recursive_combo_194409",
      "success": true,
      "error": ""
    }
  ],
  "top_10": [
    {
      "rank": 1,
      "flags": [
        "-O0"
      ],
      "score": 14.98,
      "metrics": {
        "size": 33600,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 2,
      "flags": [
        "-finline-hint-functions"
      ],
      "score": 9.96,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 9,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 3,
      "flags": [
        "-fno-inline"
      ],
      "score": 9.96,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 9,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 4,
      "flags": [
        "-fno-inline-functions"
      ],
      "score": 9.96,
      "metrics": {
        "size": 33648,
        "string_count": 15,
        "symbol_count": 9,
        "function_count": 1,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 5,
      "flags": [
        "-fno-builtin"
      ],
      "score": 5.01,
      "metrics": {
        "size": 33472,
        "string_count": 15,
        "symbol_count": 4,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 6,
      "flags": [
        "-fno-optimize-sibling-calls"
      ],
      "score": 2.49,
      "metrics": {
        "size": 33552,
        "string_count": 15,
        "symbol_count": 6,
        "function_count": 1,
        "instruction_count": 3,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 7,
      "flags": [
        "-fwritable-strings"
      ],
      "score": 0.09,
      "metrics": {
        "size": 49984,
        "string_count": 15,
        "symbol_count": 4,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 8,
      "flags": [
        "-O1"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 9,
      "flags": [
        "-O2"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 10,
      "flags": [
        "-O3"
      ],
      "score": 0.0,
      "metrics": {
        "size": 33520,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 1,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    }
  ]
}