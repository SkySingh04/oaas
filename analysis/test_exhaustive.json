{
  "summary": {
    "tested_combinations": 247,
    "total_combinations": 247,
    "failed_compilations": 148,
    "success_rate": 40.08,
    "best_result": {
      "flags": [
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_069235"
    },
    "baseline_metrics": {
      "size": 50368,
      "string_count": 15,
      "symbol_count": 11,
      "function_count": 6,
      "instruction_count": 6,
      "specific_strings_found": 0,
      "found_strings": ""
    }
  },
  "all_results": [
    {
      "flags": [
        "-O3"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_329710",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-Ofast"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_307973",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-mllvm -sub"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_627629",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -split"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_117274",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_948839",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-finline-functions"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_422637",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_617326",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_977086",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_248843",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_139085",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_544930",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_103180",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_062054",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_414507",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_819513",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_721557",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_148531",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_069235",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_920953",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_504571",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_231346",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_810946",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-mllvm -sub"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_828824",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-O3",
        "-mllvm -split"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_318469",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-O3",
        "-mllvm -bcf_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_638731",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-O3",
        "-finline-functions"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_623832",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_818521",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-O3",
        "-finline-limit=1000"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_035106",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-O3",
        "-finline-limit=10000"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_306863",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-O3",
        "-funroll-loops"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_340280",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-funroll-all-loops"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_746125",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-O3",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_855991",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-O3",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_263249",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-O3",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_615702",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-O3",
        "-ffast-math"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_020708",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-freciprocal-math"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_411449",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-funsafe-math-optimizations"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_206551",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-flto"
      ],
      "score": 20.31,
      "metrics": {
        "size": 33536,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 2,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_575639",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-flto=thin"
      ],
      "score": 20.31,
      "metrics": {
        "size": 33536,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 2,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_122148",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-flto=full"
      ],
      "score": 20.31,
      "metrics": {
        "size": 33536,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 2,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_010975",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-O3",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_064413",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-O3",
        "-mllvm -inline-threshold=1000"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_563757",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-Ofast",
        "-mllvm -sub"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_922583",
      "success": false,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-Ofast",
        "-mllvm -split"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_963844",
      "success": false,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-Ofast",
        "-mllvm -bcf_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_795409",
      "success": false,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-Ofast",
        "-finline-functions"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_269207",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_912280",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-finline-limit=1000"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_823656",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-Ofast",
        "-finline-limit=10000"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_095413",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-Ofast",
        "-funroll-loops"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_985655",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-funroll-all-loops"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_391500",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-Ofast",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_949750",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_908624",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'\nclang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_629205",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'\nclang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-ffast-math"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_114467",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-freciprocal-math"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_568127",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-funsafe-math-optimizations"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_363229",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-flto"
      ],
      "score": 20.31,
      "metrics": {
        "size": 33536,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 2,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_364189",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-flto=thin"
      ],
      "score": 20.31,
      "metrics": {
        "size": 33536,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 2,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_767523",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-flto=full"
      ],
      "score": 20.31,
      "metrics": {
        "size": 33536,
        "string_count": 15,
        "symbol_count": 5,
        "function_count": 2,
        "instruction_count": 2,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_799525",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-Ofast",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_526300",
      "success": false,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]\nclang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-Ofast",
        "-mllvm -inline-threshold=1000"
      ],
      "score": -2.28,
      "metrics": {
        "size": 50416,
        "string_count": 15,
        "symbol_count": 12,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_657516",
      "success": true,
      "error": "clang: warning: argument '-Ofast' is deprecated; use '-O3 -ffast-math' for the same behavior, or '-O3' to enable only conforming optimizations [-Wdeprecated-ofast]"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-mllvm -split"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_424318",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?\nclang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-mllvm -bcf_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_744580",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?\nclang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-finline-functions"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_361553",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_556242",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_916002",
      "success": false,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_187759",
      "success": false,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_078001",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_483846",
      "success": false,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_593712",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_000970",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_721551",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_574941",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_660473",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_312400",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_008151",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_859869",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_748696",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_170262",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-mllvm -sub",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_301478",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-sub'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '-h'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-mllvm -bcf_loop"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_605908",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?\nclang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-finline-functions"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_222881",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_865954",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-mllvm -split",
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_634155",
      "success": false,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_905912",
      "success": false,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_939329",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_345174",
      "success": false,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_903424",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-mllvm -split",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_862298",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-mllvm -split",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_214751",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-mllvm -split",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_068141",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_010498",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_805600",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_174688",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_721197",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_610024",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -split",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_968671",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-mllvm -split",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_611190",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-split'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--help'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-finline-functions"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_194779",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_246293",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_606053",
      "success": false,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_509682",
      "success": false,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_768052",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_868688",
      "success": false,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]\nclang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_426938",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_385812",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_186649",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_591655",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_982396",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_777498",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_330074",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_549920",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_765410",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_492185",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-mllvm -bcf_loop",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_439913",
      "success": false,
      "error": "clang (LLVM option parsing): Unknown command line argument '-bcf_loop'.  Try: 'clang (LLVM option parsing) --help'\nclang (LLVM option parsing): Did you mean '--icp-lto'?"
    },
    {
      "flags": [
        "-finline-functions",
        "-finline-functions-aggressive"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_633918",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions",
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_545294",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-functions",
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_817051",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-functions",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_155677",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_113138",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-functions",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_814563",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-finline-functions",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_773437",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-finline-functions",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_125890",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-finline-functions",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_979280",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_289765",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_716739",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_085827",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_937545",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_521163",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_247938",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-finline-functions",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_379154",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-finline-limit=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_957633",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-finline-limit=10000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_229390",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_568016",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_525477",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_083727",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_185776",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_906357",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_391619",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_150488",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_945590",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_498166",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_349884",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_933502",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_660277",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'\nclang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-finline-functions-aggressive",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_791493",
      "success": false,
      "error": "clang: error: unknown argument: '-finline-functions-aggressive'"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_650320",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_056165",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_614415",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_573289",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'\nclang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_068917",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'\nclang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_473923",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_864664",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_659766",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_212342",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_432188",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_647678",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_374453",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'\nclang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=1000",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_322181",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=1000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-funroll-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_123210",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-funroll-all-loops"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_897183",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_007049",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_414307",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'\nclang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_461551",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'\nclang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_314941",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_705682",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_500784",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_053360",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_905078",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_488696",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_215471",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'\nclang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-finline-limit=10000",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_163199",
      "success": true,
      "error": "clang: warning: optimization flag '-finline-limit=10000' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-loops",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_228092",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-funroll-loops",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_635350",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-funroll-loops",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_987803",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-funroll-loops",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_392809",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-loops",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_294853",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-loops",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_578652",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-loops",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_642531",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-loops",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_494249",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-loops",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_383076",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-loops",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_804642",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-funroll-loops",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_935858",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-floop-unroll-and-jam"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_188588",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_147462",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_499915",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_353305",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_295662",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_090764",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_459852",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_006361",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_527060",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_948626",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'\nclang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-funroll-all-loops",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_896354",
      "success": true,
      "error": "clang: warning: optimization flag '-funroll-all-loops' is not supported [-Wignored-optimization-argument]"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-floop-unroll-limit=16"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_504801",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_225382",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_078772",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_164304",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_816231",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_817191",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_363700",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_252527",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_674093",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'\nclang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-floop-unroll-and-jam",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_805309",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-and-jam'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-floop-unroll-limit=32"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_775176",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'\nclang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_628566",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_570923",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_366025",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_366985",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_586831",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_802321",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_529096",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'\nclang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-floop-unroll-limit=16",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_028440",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=16'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-ffast-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_281890",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_367422",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_467733",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-flto"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_531612",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-flto=thin"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_383330",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-flto=full"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_455645",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_325595",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'\nclang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-floop-unroll-limit=32",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_824939",
      "success": false,
      "error": "clang: error: unknown argument: '-floop-unroll-limit=32'"
    },
    {
      "flags": [
        "-ffast-math",
        "-freciprocal-math"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_543919",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffast-math",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_339021",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffast-math",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_339981",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffast-math",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_191699",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffast-math",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_775317",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-ffast-math",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_502092",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-ffast-math",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_633308",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math",
        "-funsafe-math-optimizations"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_215572",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_584660",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_987994",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_203484",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-freciprocal-math",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_930259",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-freciprocal-math",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_877987",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funsafe-math-optimizations",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_393892",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funsafe-math-optimizations",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_245610",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funsafe-math-optimizations",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_686053",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-funsafe-math-optimizations",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_556003",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-funsafe-math-optimizations",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {
        "size": 50368,
        "string_count": 15,
        "symbol_count": 11,
        "function_count": 6,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_055347",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_497031",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-flto",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_628247",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto=thin",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_844579",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-flto=thin",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_975795",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-flto=full",
        "-fsanitize=safe-stack"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_798010",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    },
    {
      "flags": [
        "-flto=full",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      },
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_929226",
      "success": true,
      "error": ""
    },
    {
      "flags": [
        "-fsanitize=safe-stack",
        "-mllvm -inline-threshold=1000"
      ],
      "score": 0.0,
      "metrics": {},
      "binary_path": "bin/test_exhaustive/factorial_recursive_combo_777920",
      "success": false,
      "error": "clang: error: unsupported option '-fsanitize=safe-stack' for target 'arm64-apple-darwin24.4.0'"
    }
  ],
  "top_10": [
    {
      "rank": 1,
      "flags": [
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 2,
      "flags": [
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 3,
      "flags": [
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 4,
      "flags": [
        "-finline-functions",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 5,
      "flags": [
        "-finline-functions",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 6,
      "flags": [
        "-finline-functions",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 7,
      "flags": [
        "-finline-limit=1000",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 8,
      "flags": [
        "-finline-limit=1000",
        "-flto=thin"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 9,
      "flags": [
        "-finline-limit=1000",
        "-flto=full"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    },
    {
      "rank": 10,
      "flags": [
        "-finline-limit=10000",
        "-flto"
      ],
      "score": 23.48,
      "metrics": {
        "size": 33616,
        "string_count": 15,
        "symbol_count": 8,
        "function_count": 2,
        "instruction_count": 6,
        "specific_strings_found": 0,
        "found_strings": ""
      }
    }
  ]
}