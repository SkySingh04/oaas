# Backend container for LLVM Obfuscator API
# Provides custom LLVM toolchain with obfuscation passes

FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies including LLVM development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    build-essential \
    clang \
    llvm \
    lld \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install Python dependencies
COPY requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt

# Copy application code
COPY . /app

# Install custom LLVM toolchain and passes
RUN mkdir -p /usr/local/llvm-obfuscator/bin
RUN mkdir -p /usr/local/llvm-obfuscator/lib

# Copy custom LLVM binaries and plugins
COPY plugins/linux-x86_64/clang /usr/local/llvm-obfuscator/bin/clang
COPY plugins/linux-x86_64/opt /usr/local/llvm-obfuscator/bin/opt
COPY plugins/linux-x86_64/LLVMObfuscationPlugin.so /usr/local/llvm-obfuscator/lib/

# Make binaries executable
RUN chmod +x /usr/local/llvm-obfuscator/bin/clang
RUN chmod +x /usr/local/llvm-obfuscator/bin/opt

# Add custom LLVM toolchain to PATH
ENV PATH="/usr/local/llvm-obfuscator/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/llvm-obfuscator/lib:${LD_LIBRARY_PATH}"

# Verify custom toolchain installation
RUN /usr/local/llvm-obfuscator/bin/clang --version || echo "Custom clang installed"
RUN /usr/local/llvm-obfuscator/bin/opt --version || echo "Custom opt installed"

# Create reports directory
RUN mkdir -p /app/reports

EXPOSE 7888

HEALTHCHECK CMD curl -fsS http://localhost:7888/api/health || exit 1

CMD ["uvicorn", "api.server:app", "--host", "0.0.0.0", "--port", "7888"]


