# Protection Configuration
# Define which functions to protect and with what level of obfuscation

critical_functions:
  # License validation - Maximum protection with VM
  - name: "validate_license_key"
    file: "examples/license_validator.c"
    protection_level: "maximum"
    category: "license"
    layers:
      - string_encryption
      - cfg_flattening
      - opaque_predicates
      - vm
    custom_vm: true
    performance_budget_ms: 10  # Max acceptable overhead

  # Data encryption - High protection without VM
  - name: "decrypt_user_data"
    file: "examples/crypto_operations.c"
    protection_level: "high"
    category: "crypto"
    layers:
      - string_encryption
      - cfg_flattening
      - opaque_predicates
    custom_vm: false
    performance_budget_ms: 5

  # Proprietary algorithm - Maximum protection
  - name: "proprietary_algorithm"
    file: "examples/core_logic.c"
    protection_level: "maximum"
    category: "ip"
    layers:
      - string_encryption
      - cfg_flattening
      - opaque_predicates
      - vm
    custom_vm: true
    performance_budget_ms: 20

  # Authentication - High protection
  - name: "authenticate_user"
    file: "examples/auth_system.c"
    protection_level: "high"
    category: "auth"
    layers:
      - string_encryption
      - cfg_flattening
      - opaque_predicates
    custom_vm: false
    performance_budget_ms: 3

  # DRM check - Medium protection
  - name: "check_subscription_expiry"
    file: "examples/drm_system.c"
    protection_level: "medium"
    category: "drm"
    layers:
      - string_encryption
      - cfg_flattening
    custom_vm: false
    performance_budget_ms: 2

# Protection level definitions
protection_levels:
  low:
    description: "Basic obfuscation"
    layers: [string_encryption]
    expected_overhead: "< 2%"

  medium:
    description: "Moderate obfuscation"
    layers: [string_encryption, cfg_flattening]
    expected_overhead: "2-5%"

  high:
    description: "Strong obfuscation"
    layers: [string_encryption, cfg_flattening, opaque_predicates]
    expected_overhead: "5-10%"

  maximum:
    description: "Maximum obfuscation with virtualization"
    layers: [string_encryption, cfg_flattening, opaque_predicates, vm]
    expected_overhead: "10-50%"

# Layer configurations
layer_configs:
  string_encryption:
    algorithm: "xor"  # xor, aes128, aes256
    key_generation: "random"
    runtime_decryption: true
    cleanup_after_use: true

  cfg_flattening:
    create_dispatcher: true
    fake_states: 5  # Number of fake unreachable states
    scramble_blocks: true
    opaque_state_transitions: true

  opaque_predicates:
    complexity: "medium"  # low, medium, high
    predicates_per_branch: 2
    use_context_dependent: true
    add_dead_code: true

  vm:
    instruction_set: "custom_8bit"
    encrypt_bytecode: true
    obfuscate_interpreter: true
    anti_disassembly: true

# Measurement settings
measurement:
  baseline_runs: 10
  protected_runs: 10
  metrics:
    - execution_time
    - memory_usage
    - binary_size
    - symbol_count
    - decompilation_score
    - entropy

# Output settings
output:
  backup_original: true
  generate_report: true
  report_format: "html"  # html, json, text
  verbose: true
